properties([
    parameters ([
        string(name: 'BUILD_NODE', defaultValue: 'ossim-build', description: 'The build node to run on'),
        string(name: 'ARTIFACT_TYPE', defaultValue: 'centos-7', description: 'type of artifact to pull'),
        string(name: 'OSSIM_MAKE_JOBS', defaultValue: '8', description: 'Number of jobs for the make system'),
        string(name: 'GIT_PUBLIC_SERVER_URL', defaultValue: 'https://github.com/ossimlabs', description: ''),
        booleanParam(name: 'CLEAN_WORKSPACE', defaultValue: true, description: 'Clean the workspace at the end of the run')
        booleanParam(name: 'MAKE_VERBOSE', defaultValue: true, description: '')
    ]),
    [$class: 'GithubProjectProperty', displayName: '', projectUrlStr: 'https://github.com/ossimlabs/ossim-sandbox'],
    buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '20')),
    disableConcurrentBuilds()
])
node ("${BUILD_NODE}"){
   try{
      stage( "Download Artifacts" ) {
         withCredentials([string(credentialsId: 'o2-artifact-project', variable: 'o2ArtifactProject')]) {
               step ([$class: "CopyArtifact",
                  projectName: o2ArtifactProject,
                  filter: "common-variables.groovy",
                  flatten: true])
         }
         step ([$class: "CopyArtifact",
            projectName: "ossim-sandbox-docker-multibranch/master",
            filter: "ossim-build-${ARTIFACT_TYPE}.tgz",
            flatten: true])
         load "common-variables.groovy"
      }
      stage("Load Build Image"){
         sh "docker load -i ${env.WORKSPACE}/ossim-build-${ARTIFACT_TYPE}.tgz"
      }
      stage("Build OSSIM Dependencies")
      {
         sh "${env.WORKSPACE}/ossim-sandbox/docker-run.sh ossim-build-${ARTIFACT_TYPE} ossim-sandbox/build-qt4-dependency.sh ${ARTIFACT_TYPE}"
      }
      stage("Archive")
      {
         archiveArtifacts "qt4-${ARTIFACT_TYPE}.tgz"
      }
   }
   finally
   {
      stage("Clean Workspace")
      {
         if ("${CLEAN_WORKSPACE}" == "true")
            step([$class: 'WsCleanup'])
      }
   }
}